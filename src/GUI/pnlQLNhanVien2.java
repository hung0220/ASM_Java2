/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class pnlQLNhanVien2 extends javax.swing.JPanel {

    /**
     * Creates new form lab4_QLNhanVien
     */
    public pnlQLNhanVien2() {
        initComponents();
        
        //gọi hàm đổ dữ liêu
        DoDuLieuVaoTableNV();
        
        
        
        
       String lenhLayDuLieu = "select * from  NhanVien";
        ResultSet rs = ConnectSQL.ThucThiLenhReSultset(lenhLayDuLieu);
        
        try {
            while(rs.next()){
                System.out.println(rs.getString(2)); //lấy dữ liệu theo sô thứ tự tính từ 1 trở đi 
                System.out.println(rs.getString("tenNV")); //lấy theo tên cột trong SQL 
            }
        } catch (SQLException ex) {
            System.out.println("Lỗi lấy dữ liệu ");
        }
        
    }
    
    public void DoDuLieuVaoTableNV(){
        String CauLenhSQL = "select * from NhanVien";
       ResultSet rs = ConnectSQL.ThucThiLenhReSultset(CauLenhSQL);
        
        DefaultTableModel tblModel = (DefaultTableModel)tblQLNhanVien.getModel();
//        xáo dữ liệu đang có trong bảng table 
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];
        SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        try {
            while(rs.next()){
                obj[0] = rs.getString("maNV");
                obj[1] = rs.getString("tenNV");
                obj[2] = rs.getString("diaChi");
                obj[3] = rs.getString("sdt");
                if (rs.getBoolean("gioiTinh") == true ) {
                     obj[4] = "Nam";                    
                }
                else if (rs.getBoolean("gioiTinh") == false ) {
                     obj[4] = "Nữ";                     
                }             
                else {
                      obj[4] = "Khác";    
                 }
                obj[5] = rs.getString("chucVu");
                if(rs.getDate("ngaySinh") != null){
                    obj[6] = kiemTra.format(rs.getDate("ngaySinh"));
                }else{
                    obj[6] = "";
                }
                 if(rs.getDate("ngayVaoLam") != null){
                    obj[7] = kiemTra.format(rs.getDate("ngayVaoLam"));
                }else{
                    obj[7] = "";
                }
                obj[8] = rs.getInt("luong");
                obj[9] = rs.getString("tenDangNhap"); 
                obj[10] = rs.getString("matKhau");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }
    }

   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        lblMaNV = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        lblTenKH = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        lblDiaChi = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        lblGioiTinh = new javax.swing.JLabel();
        radNam = new javax.swing.JRadioButton();
        radNu = new javax.swing.JRadioButton();
        radKhac = new javax.swing.JRadioButton();
        ngaySinh = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        lblSDT = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        lblChucVu = new javax.swing.JLabel();
        txtChucVu = new javax.swing.JTextField();
        lblLuong = new javax.swing.JLabel();
        txtLuong = new javax.swing.JTextField();
        lblNgayVaoLam = new javax.swing.JLabel();
        txtNgayVaoLam = new javax.swing.JTextField();
        lblTenDangNhap = new javax.swing.JLabel();
        lblMK = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        txtMK = new javax.swing.JTextField();
        btnSapCesp = new javax.swing.JPanel();
        lblimTen = new javax.swing.JLabel();
        lblTimLuong = new javax.swing.JLabel();
        txtTimTen = new javax.swing.JTextField();
        txtTimLuong = new javax.swing.JTextField();
        btnTimkiem = new javax.swing.JButton();
        cbbSapXep = new javax.swing.JComboBox();
        btnSapXep = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQLNhanVien = new javax.swing.JTable();
        jpnTen = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();

        jPanel4.setBackground(java.awt.SystemColor.controlShadow);
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18), new java.awt.Color(255, 51, 51))); // NOI18N

        lblMaNV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMaNV.setText("Mã nhân viên");

        txtMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNVActionPerformed(evt);
            }
        });

        lblTenKH.setBackground(new java.awt.Color(255, 51, 51));
        lblTenKH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenKH.setText("Tên nhân viên");

        lblDiaChi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDiaChi.setText("Địa chỉ");

        lblGioiTinh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGioiTinh.setText("Giới Tính");

        buttonGroup1.add(radNam);
        radNam.setSelected(true);
        radNam.setText("Nam");
        radNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNamActionPerformed(evt);
            }
        });

        buttonGroup1.add(radNu);
        radNu.setText("Nữ");

        buttonGroup1.add(radKhac);
        radKhac.setText("Khác");
        radKhac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radKhacActionPerformed(evt);
            }
        });

        ngaySinh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ngaySinh.setText("Ngày sinh");

        txtNgaySinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgaySinhActionPerformed(evt);
            }
        });

        lblSDT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSDT.setText("Số điện thoại");

        lblChucVu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChucVu.setText("Chức vụ");

        lblLuong.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLuong.setText("Lương");

        lblNgayVaoLam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNgayVaoLam.setText("Ngày vào làm");

        lblTenDangNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenDangNhap.setText("Tên đăng nhập");

        lblMK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMK.setText("Mật khẩu");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ngaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblGioiTinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTenKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMaNV)
                    .addComponent(lblNgayVaoLam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(radNam)
                                .addGap(26, 26, 26)
                                .addComponent(radNu)
                                .addGap(26, 26, 26)
                                .addComponent(radKhac))
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTenNV)
                                .addComponent(txtMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                                .addComponent(txtDiaChi))
                            .addComponent(txtNgayVaoLam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTenDangNhap, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChucVu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSDT, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChucVu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenDangNhap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaNV)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSDT)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenKH)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChucVu)
                    .addComponent(txtChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiaChi)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLuong))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblGioiTinh)
                        .addComponent(radNu)
                        .addComponent(radKhac)
                        .addComponent(radNam))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTenDangNhap)
                        .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMK)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ngaySinh)
                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNgayVaoLam)
                    .addComponent(txtNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnSapCesp.setBackground(java.awt.SystemColor.controlShadow);
        btnSapCesp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Công Cụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18), new java.awt.Color(255, 51, 51))); // NOI18N

        lblimTen.setText("Tìm Tên:");

        lblTimLuong.setText("Tìm Lương:");

        txtTimTen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimTenKeyReleased(evt);
            }
        });

        txtTimLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimLuongKeyReleased(evt);
            }
        });

        btnTimkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/loupe.png"))); // NOI18N
        btnTimkiem.setText("Tìm Kiếm");
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        cbbSapXep.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sắp Xếp Lương Tăng Dần", "Sắp Xếp Lương Giảm Dần", "Sắp Xếp Tên Tăng Dần", "Sắp Xếp Tên Giảm Dần", " " }));

        btnSapXep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/sort-down.png"))); // NOI18N
        btnSapXep.setText("Sắp Xếp");
        btnSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnSapCespLayout = new javax.swing.GroupLayout(btnSapCesp);
        btnSapCesp.setLayout(btnSapCespLayout);
        btnSapCespLayout.setHorizontalGroup(
            btnSapCespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSapCespLayout.createSequentialGroup()
                .addGroup(btnSapCespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(btnSapCespLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(btnSapCespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(btnSapCespLayout.createSequentialGroup()
                                .addComponent(lblTimLuong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(btnSapCespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTimkiem)
                                    .addComponent(txtTimLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(btnSapCespLayout.createSequentialGroup()
                                .addComponent(lblimTen)
                                .addGap(18, 18, 18)
                                .addComponent(txtTimTen))
                            .addComponent(cbbSapXep, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(btnSapCespLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
        btnSapCespLayout.setVerticalGroup(
            btnSapCespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSapCespLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(btnSapCespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblimTen)
                    .addComponent(txtTimTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(btnSapCespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimLuong)
                    .addComponent(txtTimLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimkiem)
                .addGap(23, 23, 23)
                .addComponent(cbbSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSapXep)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblQLNhanVien.setBackground(java.awt.SystemColor.controlShadow);
        tblQLNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Tên nhân viên", "Địa chỉ", "SĐT", "Giới tính", "Chức vụ", "Ngày sinh", "Ngày vào làm", "Lương", "Tên đăng nhập", "Mật khẩu"
            }
        ));
        tblQLNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQLNhanVien);

        jpnTen.setBackground(java.awt.SystemColor.controlShadow);
        jpnTen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quản Lí", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18), new java.awt.Color(255, 51, 51))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("QUẢN LÍ NHÂN VIÊN");

        javax.swing.GroupLayout jpnTenLayout = new javax.swing.GroupLayout(jpnTen);
        jpnTen.setLayout(jpnTenLayout);
        jpnTenLayout.setHorizontalGroup(
            jpnTenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnTenLayout.createSequentialGroup()
                .addContainerGap(523, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(431, 431, 431))
        );
        jpnTenLayout.setVerticalGroup(
            jpnTenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnTenLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel3.setBackground(java.awt.SystemColor.controlShadow);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nút Bấm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18), new java.awt.Color(255, 255, 51))); // NOI18N

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/updated.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/3330.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/refresh.png"))); // NOI18N
        btnThoat.setText("Set");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSapCesp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jpnTen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpnTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSapCesp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radNamActionPerformed

    private void radKhacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radKhacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radKhacActionPerformed

    private void txtNgaySinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgaySinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgaySinhActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String maNV = txtMaNV.getText();
        String tenNV = txtTenNV.getText();
        String diaChi = txtDiaChi.getText();
        String ngaySinh = txtNgaySinh.getText();
        String ngayVaoLam = txtNgayVaoLam.getText();
        String chucVu = txtChucVu.getText();
        String luong = txtLuong.getText();
        String SDT = txtSDT.getText();
        String tenDangNhap = txtTenDangNhap.getText();
        String mK = txtMK.getText();


        Calendar cal = Calendar.getInstance();
        SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        kiemTra.setLenient(false);
            
        
        if(!ngaySinh.matches("^[0-9\\-]*$") || !ngayVaoLam.matches("^[0-9\\-]*$")){
            JOptionPane.showMessageDialog(new JFrame(), "Ngày sinh sai định dạng (yyyy-MM-dd)");
            return;
        }    
        
        try {
            Date NgaySinh = kiemTra.parse(ngaySinh);
            Date NgayVaoLam = kiemTra.parse(ngayVaoLam);
            // new dateHT = ngày hiện tại
            Date dateHT = new Date();
            if(NgayVaoLam.before(NgaySinh) || NgayVaoLam.after(dateHT)){
                 JOptionPane.showMessageDialog(new JFrame(), "Ngày vào làm phải trước ngày hôm nay và sau ngày sinh");
                 return;
            }
            if (NgaySinh.after(dateHT)) {
                JOptionPane.showMessageDialog(new JFrame(), "Ngày sinh phải trước ngày hôm nay");
                return;
            }

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Ngày sinh sai định dạng (dd-MM-yyyy)");
            Logger.getLogger(pnlQLNhanVien2.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
         
        
        if (!SDT.matches("^[0-9]{10}$")){
            JOptionPane.showMessageDialog(new JFrame(), "Bạn nhập sai  SĐT");
            return;
        }
        if(!luong.matches( "^[0-9]*$")||luong.equals("0")){
            JOptionPane.showMessageDialog(new JFrame(), "Lương phải lớn hơn 0");
            return;
        }

                if(tenNV.equals("") || diaChi.equals("") || SDT.equals("") || ngaySinh.equals("") || ngaySinh.equals("") || ngayVaoLam.equals("") || tenDangNhap.equals("") || mK.equals("")){
            JOptionPane.showMessageDialog(new JFrame(),
                "Bạn chưa nhập đủ thông tin ");
        }else if(tenNV.length()>100){
            JOptionPane.showMessageDialog(new JFrame(),
                "Tên phải nhỏ hơn 100 Kí tự`");
        }else if(SDT.length() > 11 || SDT.length() < 9 ){
            JOptionPane.showMessageDialog(new JFrame(),
                "Số điện thoại là 10 số và bắt đầu từ 0");

        }
        String gioiTinh;
        if (radNam.isSelected() ){

            gioiTinh = "1";
        }
        else if (radNu.isSelected()) {

            gioiTinh = "0";
        }
        else {

              gioiTinh = "";
        }
        
 String CauLenhThem = "INSERT INTO [dbo].[NhanVien]  " +
"           ([tenNV]  " +
"           ,[diaChi]  " +
"           ,[sdt]  " +
"           ,[gioiTinh]  " +
"           ,[chucvu]  " +
"           ,[ngaySinh]  " +
"           ,[ngayVaoLam]  " +
"           ,[Luong]  " +
"           ,[tenDangNhap]  " +
"           ,[matKhau])  " +
"     VALUES  " +
"           (N'"+tenNV+"'  " +
"           ,N'"+diaChi+"'  " +
"           ,'"+SDT+"'  " +
"           ,  " + gioiTinh+
"           ,N'"+chucVu+"'  " +
"           ,'"+ngaySinh+"'  " +
"           ,'"+ngayVaoLam+"'  " +
"           , " + luong+
"           ,N'"+tenDangNhap+"'  " +
"           ,N'"+mK+"')";
      ConnectSQL.ThucThi3Lenh(CauLenhThem);
           DoDuLieuVaoTableNV();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int viTriDuocChon = tblQLNhanVien.getSelectedRow();

        if(viTriDuocChon == -1){
            JOptionPane.showMessageDialog(new JFrame(), "Bạn chưa chọn dòng để sửa");
            return; //thoat khoi ham
        }
        
        String tenNV = txtTenNV.getText();
        String diaChi = txtDiaChi.getText();
        String ngaySinh = txtNgaySinh.getText();
        String ngayVaoLam = txtNgayVaoLam.getText();
        String chucVu = txtChucVu.getText();
        String luong = txtLuong.getText();
        String SDT = txtSDT.getText();
        String tenDangNhap = txtTenDangNhap.getText();
        String mK = txtMK.getText();

       String gioiTinh;
        if (radNam.isSelected() ){
//            GioiTinh =  rdaNam.getText();
            gioiTinh = "1";
        }
        else if (radNu.isSelected()) {
//            GioiTinh = rdaNu.getText();
            gioiTinh = "0";
        }
        else {
//            GioiTinh = rdaKhac.getText();
              gioiTinh = "";
        }

        Calendar cal = Calendar.getInstance();
        SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        kiemTra.setLenient(false);
            
        if(!ngaySinh.matches("^[0-9\\-]*$") || !ngayVaoLam.matches("^[0-9\\-]*$")){
            JOptionPane.showMessageDialog(new JFrame(), "Ngày sinh sai định dạng (dd-MM-yyyy)");
            return;
        }  
        
        try {
            Date NgaySinh = kiemTra.parse(ngaySinh);
            Date NgayVaoLam = kiemTra.parse(ngayVaoLam);
            // new dateHT = ngày hiện tại
            Date dateHT = new Date();
            if(NgayVaoLam.before(NgaySinh) || NgayVaoLam.after(dateHT)){
                 JOptionPane.showMessageDialog(new JFrame(), "Ngày vào làm phải trước ngày hôm nay và sau ngày sinh");
                 return;
            }
            if (NgaySinh.after(dateHT)) {
                JOptionPane.showMessageDialog(new JFrame(), "Ngày sinh phải trước ngày hôm nay");
                return;
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Ngày sinh sai định dạng (dd-MM-yyyy)");
            Logger.getLogger(pnlQLNhanVien2.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }

        if (!SDT.matches("^[0-9]{10}$")){
            JOptionPane.showMessageDialog(new JFrame(), "Bạn nhập sai  SĐT");
            return;
        }
        if(!luong.matches( "^[0-9]*$")||luong.equals("0")){
            JOptionPane.showMessageDialog(new JFrame(), "Lương phải lớn hơn 0");
            return;
        }


        String maNV = txtMaNV.getText();
        String CauLenhSua = "UPDATE [dbo].[NhanVien] " +
"   SET [tenNV] = N'"+ tenNV +"' " +
"      ,[diaChi] = N'"+ diaChi +"' " +
"      ,[sdt] =  " + SDT +
"      ,[gioiTinh] =  " + gioiTinh +
"      ,[chucVu] = N'"+ chucVu +"' " +
"      ,[ngaySinh] = '"+ ngaySinh +"' " +
"      ,[ngayVaoLam] = '"+ ngayVaoLam +"' " +
"      ,[luong] =  " + luong +
"      ,[tenDangNhap] = N'"+ tenDangNhap +"' " +
"      ,[matKhau] = N'" + mK +"' " +
" WHERE maNV = " + maNV ;
        ConnectSQL.ThucThi3Lenh(CauLenhSua);
        DoDuLieuVaoTableNV();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        //lấy vị trí được thêm
        int DSViTriXoa [] = tblQLNhanVien.getSelectedRows();
        
        for(int i = DSViTriXoa.length - 1; i >= 0; i-- ){
//            DefaultTableModel tblModel = (DefaultTableModel)tblBangDuLieu.getModel();
//            tblModel.removeRow(DSViTriXoa[i]);
//          Lấy IDSanPham caanf xóa từ dòng đc chọn
            String maNV = tblQLNhanVien.getValueAt(DSViTriXoa[i], 0).toString();
//            tạo lệnh xóa dựa vào IDSanPham ở trên
            String CauLenhSQL = "Delete from NhanVien where maNV = " + maNV;
            ConnectSQL.ThucThi3Lenh(CauLenhSQL);
            
        }
//
//        for(int i= 0; i < tblBangDuLieu.getRowCount(); i++){
//            tblBangDuLieu.setValueAt(i + 1, i, 0);
//        }
         DoDuLieuVaoTableNV();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
       txtChucVu.setText("");
       txtDiaChi.setText("");
       txtMK.setText("");
       txtLuong.setText("");
       txtMaNV.setText("");
       txtNgaySinh.setText("");
       txtNgayVaoLam.setText("");
       txtSDT.setText("");
       txtSDT.setText("");
       txtTenDangNhap.setText("");
       txtTenNV.setText("");
       txtTimLuong.setText("");
       txtTimTen.setText("");

    }//GEN-LAST:event_btnThoatActionPerformed

    private void tblQLNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLNhanVienMouseClicked
        // TODO add your handling code here:
          int viTriDuocChon = tblQLNhanVien.getSelectedRow();

    String maNV = tblQLNhanVien.getValueAt(viTriDuocChon, 0).toString();
    txtMaNV.setText(maNV);
    
    String tenNV = tblQLNhanVien.getValueAt(viTriDuocChon, 1).toString();
    txtTenNV.setText(tenNV);
    
    String diaChi = tblQLNhanVien.getValueAt(viTriDuocChon, 2).toString();
    txtDiaChi.setText(diaChi);
    
    String SDT = tblQLNhanVien.getValueAt(viTriDuocChon, 3).toString();
    txtSDT.setText(SDT);
    
    Object gioiTinh = tblQLNhanVien.getValueAt(viTriDuocChon, 4).toString();
        if (gioiTinh.equals("Nam")) {
             radNam.setSelected(true);
        }else if(gioiTinh.equals("Nữ")) {
             radNu.setSelected(true);            
        }else if(gioiTinh.equals("Khác")){
             radKhac.setSelected(true);             
        }
        
    String chucVu = tblQLNhanVien.getValueAt(viTriDuocChon, 5).toString();
    txtChucVu.setText(chucVu);
    
    String ngaySinh = tblQLNhanVien.getValueAt(viTriDuocChon, 6).toString();
    txtNgaySinh.setText(ngaySinh);
    
    String ngayVaoLam = tblQLNhanVien.getValueAt(viTriDuocChon, 7).toString();
    txtNgayVaoLam.setText(ngayVaoLam);

    String luong = tblQLNhanVien.getValueAt(viTriDuocChon, 8).toString();
    txtLuong.setText(luong);

    String tenDangNhap = tblQLNhanVien.getValueAt(viTriDuocChon, 9).toString();
    txtTenDangNhap.setText(tenDangNhap);
    
    String mK = tblQLNhanVien.getValueAt(viTriDuocChon, 10).toString();
    txtMK.setText(mK);
    
    }//GEN-LAST:event_tblQLNhanVienMouseClicked

    private void txtMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNVActionPerformed

    private void txtTimTenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimTenKeyReleased
        String timTen = "%" +txtTimTen.getText() +"%";
        
        String CauLenhTim = "select *from NhanVien where tenNV like ?";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim, timTen);
        
        DefaultTableModel tblModel = (DefaultTableModel)tblQLNhanVien.getModel();
//        xáo dữ liệu đang có trong bảng table 
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];
          SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        try {
            while(rs.next()){
                  obj[0] = rs.getString("maNV");
                obj[1] = rs.getString("tenNV");
                obj[2] = rs.getString("diaChi");
                obj[3] = rs.getString("sdt");
                if (rs.getBoolean("gioiTinh") == true ) {
                     obj[4] = "Nam";                    
                }
                else if (rs.getBoolean("gioiTinh") == false ) {
                     obj[4] = "Nữ";                     
                }             
                else {
                      obj[4] = "Khác";    
                 }
                obj[5] = rs.getString("chucVu");
                if(rs.getDate("ngaySinh") != null){
                    obj[6] = kiemTra.format(rs.getDate("ngaySinh"));
                }else{
                    obj[6] = "";
                }
                 if(rs.getDate("ngayVaoLam") != null){
                    obj[7] = kiemTra.format(rs.getDate("ngayVaoLam"));
                }else{
                    obj[7] = "";
                }
                obj[8] = rs.getInt("luong");
                obj[9] = rs.getString("tenDangNhap"); 
                obj[10] = rs.getString("matKhau");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }
    }//GEN-LAST:event_txtTimTenKeyReleased

    private void txtTimLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimLuongKeyReleased
       double timGiaBan;
        try{
        timGiaBan = Double.parseDouble(txtTimLuong.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), "Gía cần tìm không hợp lệ");
            return;           
        }
         SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        
        String CauLenhTim = "select *from NhanVien where luong >=?";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim, timGiaBan);
        
        DefaultTableModel tblModel = (DefaultTableModel)tblQLNhanVien.getModel();
//        xáo dữ liệu đang có trong bảng table 
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];
        
        try {
            while(rs.next()){
               obj[0] = rs.getString("maNV");
                obj[1] = rs.getString("tenNV");
                obj[2] = rs.getString("diaChi");
                obj[3] = rs.getString("sdt");
                if (rs.getBoolean("gioiTinh") == true ) {
                     obj[4] = "Nam";                    
                }
                else if (rs.getBoolean("gioiTinh") == false ) {
                     obj[4] = "Nữ";                     
                }             
                else {
                      obj[4] = "Khác";    
                 }
                obj[5] = rs.getString("chucVu");
                if(rs.getDate("ngaySinh") != null){
                    obj[6] = kiemTra.format(rs.getDate("ngaySinh"));
                }else{
                    obj[6] = "";
                }
                 if(rs.getDate("ngayVaoLam") != null){
                    obj[7] = kiemTra.format(rs.getDate("ngayVaoLam"));
                }else{
                    obj[7] = "";
                }
                obj[8] = rs.getInt("luong");
                obj[9] = rs.getString("tenDangNhap"); 
                obj[10] = rs.getString("matKhau");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }
    }//GEN-LAST:event_txtTimLuongKeyReleased

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed
double timGiaBan;
        try{
        timGiaBan = Double.parseDouble(txtTimLuong.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), "Gía cần tìm không hợp lệ");
            return;
            
        }
        String timTen = "%" +txtTimTen.getText() +"%";
        
        String CauLenhTim = "select *from NhanVien where luong >= ? and tenNV like ?";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim, timGiaBan, timTen);
        
        DefaultTableModel tblModel = (DefaultTableModel)tblQLNhanVien.getModel();
//        xáo dữ liệu đang có trong bảng table 
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];
        SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        try {
            while(rs.next()){
            obj[0] = rs.getString("maNV");
                obj[1] = rs.getString("tenNV");
                obj[2] = rs.getString("diaChi");
                obj[3] = rs.getString("sdt");
                if (rs.getBoolean("gioiTinh") == true ) {
                     obj[4] = "Nam";                    
                }
                else if (rs.getBoolean("gioiTinh") == false ) {
                     obj[4] = "Nữ";                     
                }             
                else {
                      obj[4] = "Khác";    
                 }
                obj[5] = rs.getString("chucVu");
                if(rs.getDate("ngaySinh") != null){
                    obj[6] = kiemTra.format(rs.getDate("ngaySinh"));
                }else{
                    obj[6] = "";
                }
                 if(rs.getDate("ngayVaoLam") != null){
                    obj[7] = kiemTra.format(rs.getDate("ngayVaoLam"));
                }else{
                    obj[7] = "";
                }
                obj[8] = rs.getInt("luong");
                obj[9] = rs.getString("tenDangNhap"); 
                obj[10] = rs.getString("matKhau");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }          
    }//GEN-LAST:event_btnTimkiemActionPerformed

    private void btnSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepActionPerformed
        String TimKiem= cbbSapXep.getSelectedItem().toString();
     System.out.println(TimKiem);
     if(TimKiem == "Sắp Xếp Lương Tăng Dần"){
             String CauLenhTim = "Select * from NhanVien  order by luong  asc ";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim);
          SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        DefaultTableModel tblModel = (DefaultTableModel)tblQLNhanVien.getModel();
//        xáo dữ liệu đang có trong bảng table 
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];
        
         
        try {
            while(rs.next()){
            obj[0] = rs.getString("maNV");
                obj[1] = rs.getString("tenNV");
                obj[2] = rs.getString("diaChi");
                obj[3] = rs.getString("sdt");
                if (rs.getBoolean("gioiTinh") == true ) {
                     obj[4] = "Nam";                    
                }
                else if (rs.getBoolean("gioiTinh") == false ) {
                     obj[4] = "Nữ";                     
                }             
                else {
                      obj[4] = "Khác";    
                 }
                obj[5] = rs.getString("chucVu");
                if(rs.getDate("ngaySinh") != null){
                    obj[6] = kiemTra.format(rs.getDate("ngaySinh"));
                }else{
                    obj[6] = "";
                }
                 if(rs.getDate("ngayVaoLam") != null){
                    obj[7] = kiemTra.format(rs.getDate("ngayVaoLam"));
                }else{
                    obj[7] = "";
                }
                obj[8] = rs.getInt("luong");
                obj[9] = rs.getString("tenDangNhap"); 
                obj[10] = rs.getString("matKhau");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }          
     }else if(TimKiem == "Sắp Xếp Lương Giảm Dần"){
             String CauLenhTim = "Select * from NhanVien  order by luong  DESC ";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim);
          SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        DefaultTableModel tblModel = (DefaultTableModel)tblQLNhanVien.getModel();
//        xáo dữ liệu đang có trong bảng table 
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];
        
         
        try {
            while(rs.next()){
            obj[0] = rs.getString("maNV");
                obj[1] = rs.getString("tenNV");
                obj[2] = rs.getString("diaChi");
                obj[3] = rs.getString("sdt");
                if (rs.getBoolean("gioiTinh") == true ) {
                     obj[4] = "Nam";                    
                }
                else if (rs.getBoolean("gioiTinh") == false ) {
                     obj[4] = "Nữ";                     
                }             
                else {
                      obj[4] = "Khác";    
                 }
                obj[5] = rs.getString("chucVu");
                if(rs.getDate("ngaySinh") != null){
                    obj[6] = kiemTra.format(rs.getDate("ngaySinh"));
                }else{
                    obj[6] = "";
                }
                 if(rs.getDate("ngayVaoLam") != null){
                    obj[7] = kiemTra.format(rs.getDate("ngayVaoLam"));
                }else{
                    obj[7] = "";
                }
                obj[8] = rs.getInt("luong");
                obj[9] = rs.getString("tenDangNhap"); 
                obj[10] = rs.getString("matKhau");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }          
     }else if(TimKiem == "Sắp Xếp Tên Tăng Dần"){
             String CauLenhTim = "Select * from NhanVien  order by tenNV  asc ";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim);
          SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        DefaultTableModel tblModel = (DefaultTableModel)tblQLNhanVien.getModel();
//        xáo dữ liệu đang có trong bảng table 
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];
        
         
        try {
            while(rs.next()){
            obj[0] = rs.getString("maNV");
                obj[1] = rs.getString("tenNV");
                obj[2] = rs.getString("diaChi");
                obj[3] = rs.getString("sdt");
                if (rs.getBoolean("gioiTinh") == true ) {
                     obj[4] = "Nam";                    
                }
                else if (rs.getBoolean("gioiTinh") == false ) {
                     obj[4] = "Nữ";                     
                }             
                else {
                      obj[4] = "Khác";    
                 }
                obj[5] = rs.getString("chucVu");
                if(rs.getDate("ngaySinh") != null){
                    obj[6] = kiemTra.format(rs.getDate("ngaySinh"));
                }else{
                    obj[6] = "";
                }
                 if(rs.getDate("ngayVaoLam") != null){
                    obj[7] = kiemTra.format(rs.getDate("ngayVaoLam"));
                }else{
                    obj[7] = "";
                }
                obj[8] = rs.getInt("luong");
                obj[9] = rs.getString("tenDangNhap"); 
                obj[10] = rs.getString("matKhau");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }          
     }else if(TimKiem == "Sắp Xếp Tên Giảm Dần"){
             String CauLenhTim = "Select * from NhanVien  order by tenNV  DESC ";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim);
          SimpleDateFormat kiemTra = new SimpleDateFormat("dd-MM-yyyy");
        DefaultTableModel tblModel = (DefaultTableModel)tblQLNhanVien.getModel();
//        xáo dữ liệu đang có trong bảng table 
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];
        
         
        try {
            while(rs.next()){
            obj[0] = rs.getString("maNV");
                obj[1] = rs.getString("tenNV");
                obj[2] = rs.getString("diaChi");
                obj[3] = rs.getString("sdt");
                if (rs.getBoolean("gioiTinh") == true ) {
                     obj[4] = "Nam";                    
                }
                else if (rs.getBoolean("gioiTinh") == false ) {
                     obj[4] = "Nữ";                     
                }             
                else {
                      obj[4] = "Khác";    
                 }
                obj[5] = rs.getString("chucVu");
                if(rs.getDate("ngaySinh") != null){
                    obj[6] = kiemTra.format(rs.getDate("ngaySinh"));
                }else{
                    obj[6] = "";
                }
                 if(rs.getDate("ngayVaoLam") != null){
                    obj[7] = kiemTra.format(rs.getDate("ngayVaoLam"));
                }else{
                    obj[7] = "";
                }
                obj[8] = rs.getInt("luong");
                obj[9] = rs.getString("tenDangNhap"); 
                obj[10] = rs.getString("matKhau");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }          
     }
    }//GEN-LAST:event_btnSapXepActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnSapCesp;
    private javax.swing.JButton btnSapXep;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbbSapXep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnTen;
    private javax.swing.JLabel lblChucVu;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblLuong;
    private javax.swing.JLabel lblMK;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblNgayVaoLam;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTenDangNhap;
    private javax.swing.JLabel lblTenKH;
    private javax.swing.JLabel lblTimLuong;
    private javax.swing.JLabel lblimTen;
    private javax.swing.JLabel ngaySinh;
    private javax.swing.JRadioButton radKhac;
    private javax.swing.JRadioButton radNam;
    private javax.swing.JRadioButton radNu;
    private javax.swing.JTable tblQLNhanVien;
    private javax.swing.JTextField txtChucVu;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMK;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtNgayVaoLam;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenDangNhap;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JTextField txtTimLuong;
    private javax.swing.JTextField txtTimTen;
    // End of variables declaration//GEN-END:variables
}
