/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class pnlQuanLiKhoHang1 extends javax.swing.JPanel {

    /**
     * Creates new form pnlQuanLiSanPham
     */
    public pnlQuanLiKhoHang1() {
        initComponents();
        DoDuLieuVaoTable();
        DoLoaiSamPhamVaoCombobox();
        
        String CauLenhSQL = "select * from KhoHang1";
        
        ResultSet ra = ConnectSQL.ThucThiLenhReSultset(CauLenhSQL);
        try {
            while(ra.next()){
                System.out.println(ra.getString(4));
                   System.out.println(ra.getString("TenSp"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(pnlQuanLiKhoHang1.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Lỗi lấy dữ liệu");
        }
        
    }
    
    public  void DoLoaiSamPhamVaoCombobox(){
        
    String DoLoaiSamPham = "select * from LoaiSanPham1";
    ResultSet rs = SQLHelper.executeQuery(DoLoaiSamPham);
    
    //Tạo defau 
        DefaultComboBoxModel cbbmodel = (DefaultComboBoxModel)cbbLoaiSanPham.getModel();
        
        cbbmodel.removeAllElements(); //xóa trắng dữ liệu trong ccb
        try {
            // dọc ds đổ vào cbb
            
           while(rs.next()){
            int MaLoaiSP =  rs.getInt("MaLoaiSP");
            String TenLoaiSP = rs.getString("TenLoai");
            
            Mycombobox myCbb = new Mycombobox(MaLoaiSP, TenLoaiSP);
            cbbmodel.addElement(myCbb);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(pnlQuanLiKhoHang1.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }
    public  void DoDuLieuVaoTable(){
     String CauLenhSQL = "select * from KhoHang1";
     ResultSet rs = ConnectSQL.ThucThiLenhReSultset(CauLenhSQL);
     
     
     
      DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
        // Tajo marng đói ttuowjng gồm 10 phần tử để chứa các giá trị trong mảng
      
      tblModel.setRowCount(0);
        Object obj[] = new Object[11];
        
        
        try {
            while(rs.next()){
            obj[0] = tblDuLieuSanPham.getRowCount() + 1;
            obj[1] = rs.getInt("IDSanPham");
            obj[2] = rs.getString("MaSP");
            obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
            obj[4] = rs.getString("TenSP");          
            obj[5] =rs.getString("SoLuong");
            obj[6] =rs.getString("DonViTinh");
            obj[7] =rs.getString("NoiNhap");
            obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
            obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
            obj[10] = rs.getString("MoTa");
            tblModel.addRow(obj);
            
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(pnlQuanLiKhoHang1.class.getName()).log(Level.SEVERE, null, ex);
        }
       
     
    }
      // Lấy tên loại sản phẩm dựa vào mã loại
    public String LayTenLoaiSP(int MaLoaiSP){
        String cauLenhLayTenLoai = "select * from LoaiSanPham1 where MaLoaiSP = ?";
        ResultSet rs = SQLHelper.executeQuery(cauLenhLayTenLoai, MaLoaiSP);
        try {
            if(rs.next()){
                return rs.getString("TenLoai");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi lấy tên loại sản phẩm");
        }
        return "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnThongTin = new javax.swing.JPanel();
        lblMaSanPham = new javax.swing.JLabel();
        lblTenSanPham = new javax.swing.JLabel();
        lblDonViTinh = new javax.swing.JLabel();
        lblLoaiSanPham = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        txtTenSanPham = new javax.swing.JTextField();
        txtDonviTinh = new javax.swing.JTextField();
        cbbLoaiSanPham = new javax.swing.JComboBox();
        lblSoLuong = new javax.swing.JLabel();
        lblGiaNhap = new javax.swing.JLabel();
        lblGiaBan = new javax.swing.JLabel();
        txtGiaNhap = new javax.swing.JTextField();
        txtGiaBan = new javax.swing.JTextField();
        lblMoTa = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        spnSoLuong = new javax.swing.JSpinner();
        lblNoiNhap = new javax.swing.JLabel();
        txtNoiNhap = new javax.swing.JTextField();
        butitem = new javax.swing.JPanel();
        bang = new javax.swing.JScrollPane();
        tblDuLieuSanPham = new javax.swing.JTable();
        jpnbuttom = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        tavb = new javax.swing.JPanel();
        txtQLKH = new javax.swing.JLabel();
        pnltk2 = new javax.swing.JPanel();
        btnTim2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtTimTen2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTimGia2 = new javax.swing.JTextField();
        cbbSapXep2 = new javax.swing.JComboBox();
        btnSappxepp2 = new javax.swing.JButton();

        setBackground(java.awt.Color.pink);

        jpnThongTin.setBackground(java.awt.SystemColor.activeCaption);
        jpnThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18), new java.awt.Color(255, 0, 0))); // NOI18N
        jpnThongTin.setForeground(new java.awt.Color(153, 255, 255));

        lblMaSanPham.setBackground(new java.awt.Color(255, 204, 204));
        lblMaSanPham.setText("Mã Sản Phẩm:");

        lblTenSanPham.setText("Tên Sản Phẩm:");

        lblDonViTinh.setText("Đon Vị Tính:");

        lblLoaiSanPham.setText("Loại Sản Phẩm:");

        txtMaSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSanPhamActionPerformed(evt);
            }
        });

        cbbLoaiSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLoaiSanPhamActionPerformed(evt);
            }
        });

        lblSoLuong.setText("Số Lượng:");

        lblGiaNhap.setText("Giá Nhập:");

        lblGiaBan.setText("Giá Bán:");

        lblMoTa.setText("Mô Tả:");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane1.setViewportView(txtMoTa);

        spnSoLuong.setModel(new javax.swing.SpinnerNumberModel());

        lblNoiNhap.setText("Nơi Nhập:");

        javax.swing.GroupLayout jpnThongTinLayout = new javax.swing.GroupLayout(jpnThongTin);
        jpnThongTin.setLayout(jpnThongTinLayout);
        jpnThongTinLayout.setHorizontalGroup(
            jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnThongTinLayout.createSequentialGroup()
                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnThongTinLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMoTa)
                            .addGroup(jpnThongTinLayout.createSequentialGroup()
                                .addComponent(lblMaSanPham)
                                .addGap(1, 1, 1))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnThongTinLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTenSanPham, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDonViTinh, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLoaiSanPham, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnThongTinLayout.createSequentialGroup()
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnThongTinLayout.createSequentialGroup()
                                .addGap(323, 323, 323)
                                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jpnThongTinLayout.createSequentialGroup()
                                        .addComponent(lblNoiNhap)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtNoiNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jpnThongTinLayout.createSequentialGroup()
                                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblSoLuong)
                                            .addGroup(jpnThongTinLayout.createSequentialGroup()
                                                .addComponent(lblGiaBan)
                                                .addGap(8, 8, 8))
                                            .addComponent(lblGiaNhap))
                                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jpnThongTinLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnThongTinLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(spnSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addGroup(jpnThongTinLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDonviTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnThongTinLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))))
        );
        jpnThongTinLayout.setVerticalGroup(
            jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnThongTinLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnThongTinLayout.createSequentialGroup()
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaSanPham)
                            .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNoiNhap)
                            .addComponent(txtNoiNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnThongTinLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTenSanPham)
                                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jpnThongTinLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(spnSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(lblSoLuong, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnThongTinLayout.createSequentialGroup()
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDonViTinh)
                            .addComponent(txtDonviTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLoaiSanPham)
                            .addComponent(cbbLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpnThongTinLayout.createSequentialGroup()
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGiaNhap)
                            .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGiaBan)
                            .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMoTa)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        butitem.setBackground(java.awt.SystemColor.activeCaption);
        butitem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bảng Thông Tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18), new java.awt.Color(255, 0, 51))); // NOI18N

        tblDuLieuSanPham.setBackground(java.awt.SystemColor.activeCaption);
        tblDuLieuSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID Sản Phẩm", "Mã Sản Phẩm", "Loại Sản Phẩm", "Tên", "Số Lượng", "Đơn Vị Tính", "Nơi Nhập", "Giá Nhập", "Giá Bán", "Mô Tả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDuLieuSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDuLieuSanPhamMouseClicked(evt);
            }
        });
        bang.setViewportView(tblDuLieuSanPham);
        if (tblDuLieuSanPham.getColumnModel().getColumnCount() > 0) {
            tblDuLieuSanPham.getColumnModel().getColumn(0).setResizable(false);
            tblDuLieuSanPham.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblDuLieuSanPham.getColumnModel().getColumn(1).setMinWidth(0);
            tblDuLieuSanPham.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblDuLieuSanPham.getColumnModel().getColumn(1).setMaxWidth(0);
            tblDuLieuSanPham.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout butitemLayout = new javax.swing.GroupLayout(butitem);
        butitem.setLayout(butitemLayout);
        butitemLayout.setHorizontalGroup(
            butitemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bang)
        );
        butitemLayout.setVerticalGroup(
            butitemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bang, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jpnbuttom.setBackground(java.awt.SystemColor.activeCaption);
        jpnbuttom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nút Bấm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18), new java.awt.Color(255, 0, 51))); // NOI18N
        jpnbuttom.setForeground(java.awt.SystemColor.activeCaption);

        btnThem.setBackground(new java.awt.Color(200, 61, 124));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(200, 61, 124));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/updated.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(200, 61, 124));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/remove.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setForeground(new java.awt.Color(0, 51, 51));
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/refresh.png"))); // NOI18N
        btnThoat.setText("Reload");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnbuttomLayout = new javax.swing.GroupLayout(jpnbuttom);
        jpnbuttom.setLayout(jpnbuttomLayout);
        jpnbuttomLayout.setHorizontalGroup(
            jpnbuttomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnbuttomLayout.createSequentialGroup()
                .addGap(415, 415, 415)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnbuttomLayout.setVerticalGroup(
            jpnbuttomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnbuttomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnbuttomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnThoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        tavb.setBackground(java.awt.SystemColor.activeCaption);
        tavb.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quản Lí", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(255, 0, 0))); // NOI18N

        txtQLKH.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtQLKH.setText("QUẢN LÍ KHO HÀNG");

        javax.swing.GroupLayout tavbLayout = new javax.swing.GroupLayout(tavb);
        tavb.setLayout(tavbLayout);
        tavbLayout.setHorizontalGroup(
            tavbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tavbLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtQLKH)
                .addGap(416, 416, 416))
        );
        tavbLayout.setVerticalGroup(
            tavbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtQLKH, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pnltk2.setBackground(java.awt.SystemColor.activeCaption);
        pnltk2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Công Cụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 18), new java.awt.Color(255, 0, 0))); // NOI18N

        btnTim2.setBackground(new java.awt.Color(200, 61, 124));
        btnTim2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/loupe.png"))); // NOI18N
        btnTim2.setText("Tìm");
        btnTim2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        jLabel5.setText("Tìm theo tên:");

        txtTimTen2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimTenKeyReleased(evt);
            }
        });

        jLabel6.setText("Tim theo giá:");

        txtTimGia2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimGiaKeyReleased(evt);
            }
        });

        cbbSapXep2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sắp Xếp Giá Nhập Tăng Dần", "Sắp Xếp Giá Nhập Giảm Dần", "Sắp Xếp Giá Bán Tăng Dần", "Sắp Xếp Giá Bán Giảm Dần", "Sắp Xếp Tên Tăng Dần", "Sắp Xếp Tên Giảm Dần" }));
        cbbSapXep2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSapXepActionPerformed(evt);
            }
        });

        btnSappxepp2.setBackground(new java.awt.Color(240, 52, 122));
        btnSappxepp2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/HinhAnh/sort-down.png"))); // NOI18N
        btnSappxepp2.setText("Sắp Xếp");
        btnSappxepp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSappxeppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnltk2Layout = new javax.swing.GroupLayout(pnltk2);
        pnltk2.setLayout(pnltk2Layout);
        pnltk2Layout.setHorizontalGroup(
            pnltk2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnltk2Layout.createSequentialGroup()
                .addGroup(pnltk2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnltk2Layout.createSequentialGroup()
                        .addGroup(pnltk2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addGroup(pnltk2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimTen2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTimGia2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnltk2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSappxepp2))
                    .addGroup(pnltk2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnltk2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbSapXep2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnltk2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnTim2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        pnltk2Layout.setVerticalGroup(
            pnltk2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnltk2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnltk2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTimTen2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnltk2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtTimGia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(btnTim2)
                .addGap(18, 18, 18)
                .addComponent(cbbSapXep2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSappxepp2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(butitem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnbuttom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tavb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jpnThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnltk2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tavb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpnThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnltk2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnbuttom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butitem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String maSp,tenSp,donViTinh,loaiSp,moTa,noiNhap,giaBan,giaNhap;
        String soLuong;
        int MaLoaiSP;
        Mycombobox LoaiDuocChon = (Mycombobox)cbbLoaiSanPham.getSelectedItem();
        MaLoaiSP =LoaiDuocChon.MaInt();
        tenSp = txtTenSanPham.getText();
        maSp = txtMaSanPham.getText();
        donViTinh = txtDonviTinh.getText();
        //Laasyb lại sp từ conbobox .tostring là chuyển sang string
        loaiSp= cbbLoaiSanPham.getSelectedItem().toString();
        moTa= txtMoTa.getText();
        noiNhap = txtNoiNhap.getText();
     //   soLuong= Integer.parseInt(spnSoLuong.getValue().toString());
        soLuong = spnSoLuong.getValue().toString();
        giaNhap =txtGiaNhap.getText();
        giaBan = txtGiaBan.getText();
        int GN = Integer.parseInt(giaNhap);
        int GB = Integer.parseInt(giaBan);
        
                if(maSp.equals("") || moTa.equals("") || tenSp.equals("") || donViTinh.equals("") || noiNhap.equals("") || giaNhap.equals("") || giaBan.equals("") || soLuong.equals("")  ){
            JOptionPane.showMessageDialog(new JFrame(),
                "Bạn chưa nhập đủ thông tin ");
        }
        else if(!giaNhap.matches( "^[0-9]*$")||giaNhap.equals("0")){
            JOptionPane.showMessageDialog(new JFrame(), "Giá Nhập phải lớn hơn 0");
            return;
        }
          else if(!giaBan.matches( "^[0-9]*$")||giaBan.equals("0")){
            JOptionPane.showMessageDialog(new JFrame(), "Giá Bán phải lớn hơn 0");
            return;
        }
        else if(!soLuong.matches( "^[0-9]*$")||soLuong.equals("0")){
            JOptionPane.showMessageDialog(new JFrame(), "Số lượng phải lớn hơn 0");
            return;
        }else if(GN >GB){
       JOptionPane.showMessageDialog(new JFrame(), "Giá Bán Phải Lớn Hơn Giá Nhập");
            return;
        }
         
       
        else{
                 String cauLenhThem = "INSERT INTO [dbo].[KhoHang1]" +
"([MaSP],[MaLoaiSP],[TenSP],[SoLuong],[DonViTinh],[NoiNhap],[GiaNhap],[GiaBan],[MoTa])" +
"VALUES(?,?,?,?,?,?,?,?,?)";
        //gội hàm thực thi lệnh sql 8 dòng
        SQLHelper.executeUpdate(cauLenhThem, maSp,MaLoaiSP,tenSp,soLuong,donViTinh,noiNhap,giaNhap,giaBan,moTa);
        
        DoDuLieuVaoTable();}
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtMaSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSanPhamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSanPhamActionPerformed

    private void cbbLoaiSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLoaiSanPhamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbLoaiSanPhamActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed

        int danhSachCanXoa[] = tblDuLieuSanPham.getSelectedRows();
        for (int i = danhSachCanXoa.length - 1; i>=0; i--) {

            
            String IDSanPham = tblDuLieuSanPham.getValueAt(danhSachCanXoa[i], 1).toString();
            String sql = "delete from KhoHang1 Where IDSanPham = " + IDSanPham;
            ConnectSQL.ThucThi3Lenh(sql);
              
            
        }
      DoDuLieuVaoTable();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblDuLieuSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDuLieuSanPhamMouseClicked
        // TODO add your handling code here:
        int viTriCanSua = tblDuLieuSanPham.getSelectedRow();
        String maSP = tblDuLieuSanPham.getValueAt(viTriCanSua,2).toString();
        txtMaSanPham.setText(maSP);
        String tenSP = tblDuLieuSanPham.getValueAt(viTriCanSua,4).toString();
        txtTenSanPham.setText(tenSP);
        String TenLoaiSP = tblDuLieuSanPham.getValueAt(viTriCanSua, 3).toString();
        ChonLoaiTrongCbb(TenLoaiSP);
        Object soLuong = tblDuLieuSanPham.getValueAt(viTriCanSua,5);
        int sl =Integer.parseInt(soLuong.toString());
        spnSoLuong.setValue(sl);
        String noiNhap = tblDuLieuSanPham.getValueAt(viTriCanSua,7).toString();
        txtNoiNhap.setText(noiNhap);
        
        
        String dvTinh = tblDuLieuSanPham.getValueAt(viTriCanSua,6).toString();
        txtDonviTinh.setText(dvTinh);
        
        String giaNhap = tblDuLieuSanPham.getValueAt(viTriCanSua,8).toString();
        txtGiaNhap.setText(giaNhap);
        
        String giaBan = tblDuLieuSanPham.getValueAt(viTriCanSua,9).toString();
       txtGiaBan.setText(giaBan);
        
       
        Object moTa = tblDuLieuSanPham.getValueAt(viTriCanSua,10);
       if(moTa != null){
           txtMoTa.setText(moTa.toString());
       }else{
           txtMoTa.setText("");
       }
        
        
        
    }//GEN-LAST:event_tblDuLieuSanPhamMouseClicked
// Hàm chọn loại sản phẩm 
    private void  ChonLoaiTrongCbb(String TenLoai){
        // Tạo lệnh lấy loại SP
        String cauLenh = "select * from LoaiSanPham1 where TenLoai = ?";
        ResultSet rs = SQLHelper.executeQuery(cauLenh, TenLoai);
        
        try {
            if(rs.next()){
                int MaLoaiSP = rs.getInt("MaLoaiSP");
                Mycombobox mycbb = new Mycombobox(MaLoaiSP, TenLoai);
                
                // Tạo 1 DefaultModelCombobox
                DefaultComboBoxModel cbbModel = (DefaultComboBoxModel)cbbLoaiSanPham.getModel();
                
             cbbModel.setSelectedItem(mycbb);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(new JFrame(),"Lỗi lấy loại sản phẩm dựa vào tên loại");
        }
    }
    
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
     //Lấy vị trí dòng đc chọn để sửa
        int viTriDuocChon= tblDuLieuSanPham.getSelectedRow();
        if(viTriDuocChon== -1){
            JOptionPane.showMessageDialog(new  JFrame(), "Bạn chưa chọn dòng nào đc sửa")
                    
                    ;
            
            return; 
      
        }
          String maSp,tenSp,donViTinh,loaiSp,moTa,NoiNhap,giaBan,giaNhap;
        String soLuong;
        int MaLoaiSP;
        
        Mycombobox LoaiDuocChon = (Mycombobox)cbbLoaiSanPham.getSelectedItem();
        MaLoaiSP =LoaiDuocChon.MaInt();
        tenSp = txtTenSanPham.getText();
        maSp = txtMaSanPham.getText();
        donViTinh = txtDonviTinh.getText();
        //Laasyb lại sp từ conbobox .tostring là chuyển sang string
        loaiSp= cbbLoaiSanPham.getSelectedItem().toString();
        moTa= txtMoTa.getText();
        NoiNhap = txtNoiNhap.getText();
     
        soLuong = spnSoLuong.getValue().toString();
        giaNhap =txtGiaNhap.getText();
        giaBan = txtGiaBan.getText();
         int GN = Integer.parseInt(giaNhap);
        int GB = Integer.parseInt(giaBan);
         String IDSanPham = tblDuLieuSanPham.getValueAt(viTriDuocChon, 1).toString();
 if(maSp.equals("") || moTa.equals("") || tenSp.equals("") || donViTinh.equals("") || NoiNhap.equals("") || giaNhap.equals("") || giaBan.equals("") || soLuong.equals("")  ){
            JOptionPane.showMessageDialog(new JFrame(),
                "Bạn chưa nhập đủ thông tin ");
        }
        else if(!giaNhap.matches( "^[0-9]*$")||giaNhap.equals("0")){
            JOptionPane.showMessageDialog(new JFrame(), "Giá Nhập phải lớn hơn 0");
            return;
        }
          else if(!giaBan.matches( "^[0-9]*$")||giaBan.equals("0")){
            JOptionPane.showMessageDialog(new JFrame(), "Giá Bán phải lớn hơn 0");
            return;
        }
        else if(!soLuong.matches( "^[0-9]*$")||soLuong.equals("0")){
            JOptionPane.showMessageDialog(new JFrame(), "Số lượng phải lớn hơn 0");
            return;
        }else if(GN >GB){
       JOptionPane.showMessageDialog(new JFrame(), "Giá Bán Phải Lớn Hơn Giá Nhập");
            return;
        }
         
       
        else{
String lanhSua ="UPDATE [dbo].[KhoHang1] " +
"   SET [MaSP] = N'" + maSp + "' " +
"      ,[MaLoaiSP] = "+MaLoaiSP+" " +
"      ,[TenSP] = N'" + tenSp + "' " +
"      ,[SoLuong] = " + soLuong +
"      ,[DonViTinh] = N'" + donViTinh +"' " +
"      ,[NoiNhap] = N'"+NoiNhap+"' " +
"      ,[GiaNhap] =  "  + giaNhap + 
"      ,[GiaBan] = " + giaBan + 
"      ,[MoTa] = N'" + moTa +"'" +
" WHERE IDSanPham = "+ IDSanPham;
         ConnectSQL.ThucThi3Lenh(lanhSua);
         DoDuLieuVaoTable();
         
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
       txtDonviTinh.setText("");
       txtGiaBan.setText("");
       txtGiaNhap.setText("");
       txtMaSanPham.setText("");
       txtMoTa.setText("");
       txtNoiNhap.setText("");
       txtQLKH.setText("");
       txtTenSanPham.setText("");
       txtTimGia2.setText("");
       txtTimTen2.setText("");
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnSappxeppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSappxeppActionPerformed
        String loaiSp= cbbSapXep2.getSelectedItem().toString();
        System.out.println(loaiSp);
        if(loaiSp == "Sắp Xếp Giá Nhập Tăng Dần"){
            String CauLenhTim = "Select * from KhoHang1  order by GiaNhap  asc ";
            ResultSet rs = SQLHelper.executeQuery(CauLenhTim);

            DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
            //        xáo dữ liệu đang có trong bảng table
            tblModel.setRowCount(0);
            Object obj[] = new Object[11];

            try {
                while(rs.next()){
                    obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                    obj[1] = rs.getInt("IDSanPham");
                    obj[2] = rs.getString("MaSP");
                    obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                    obj[4] = rs.getString("TenSP");
                    obj[5] =rs.getString("SoLuong");
                    obj[6] =rs.getString("DonViTinh");
                    obj[7] =rs.getString("NoiNhap");
                    obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                    obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                    obj[10] = rs.getString("MoTa");
                    tblModel.addRow(obj);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
            }
        } else if(loaiSp == "Sắp Xếp Giá Nhập Giảm Dần"){
            String CauLenhTim = "Select * from KhoHang1  order by GiaNhap  DESC ";
            ResultSet rs = SQLHelper.executeQuery(CauLenhTim);

            DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
            //        xáo dữ liệu đang có trong bảng table
            tblModel.setRowCount(0);
            Object obj[] = new Object[11];

            try {
                while(rs.next()){
                    obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                    obj[1] = rs.getInt("IDSanPham");
                    obj[2] = rs.getString("MaSP");
                    obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                    obj[4] = rs.getString("TenSP");
                    obj[5] =rs.getString("SoLuong");
                    obj[6] =rs.getString("DonViTinh");
                    obj[7] =rs.getString("NoiNhap");
                    obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                    obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                    obj[10] = rs.getString("MoTa");
                    tblModel.addRow(obj);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
            }
        }else if(loaiSp == "Sắp Xếp Giá Bán Giảm Dần"){
            String CauLenhTim = "Select * from KhoHang1  order by GiaBan  DESC ";
            ResultSet rs = SQLHelper.executeQuery(CauLenhTim);

            DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
            //        xáo dữ liệu đang có trong bảng table
            tblModel.setRowCount(0);
            Object obj[] = new Object[11];

            try {
                while(rs.next()){
                    obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                    obj[1] = rs.getInt("IDSanPham");
                    obj[2] = rs.getString("MaSP");
                    obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                    obj[4] = rs.getString("TenSP");
                    obj[5] =rs.getString("SoLuong");
                    obj[6] =rs.getString("DonViTinh");
                    obj[7] =rs.getString("NoiNhap");
                    obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                    obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                    obj[10] = rs.getString("MoTa");
                    tblModel.addRow(obj);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
            }

        } else if(loaiSp == "Sắp Xếp Giá Bán Tăng Dần"){
            String CauLenhTim = "Select * from KhoHang1  order by GiaBan  asc ";
            ResultSet rs = SQLHelper.executeQuery(CauLenhTim);

            DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
            //        xáo dữ liệu đang có trong bảng table
            tblModel.setRowCount(0);
            Object obj[] = new Object[11];

            try {
                while(rs.next()){
                    obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                    obj[1] = rs.getInt("IDSanPham");
                    obj[2] = rs.getString("MaSP");
                    obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                    obj[4] = rs.getString("TenSP");
                    obj[5] =rs.getString("SoLuong");
                    obj[6] =rs.getString("DonViTinh");
                    obj[7] =rs.getString("NoiNhap");
                    obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                    obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                    obj[10] = rs.getString("MoTa");
                    tblModel.addRow(obj);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
            }
        } else if(loaiSp == "Sắp Xếp Tên Tăng Dần"){
            String CauLenhTim = "Select * from KhoHang1  order by TenSP  asc ";
            ResultSet rs = SQLHelper.executeQuery(CauLenhTim);

            DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
            //        xáo dữ liệu đang có trong bảng table
            tblModel.setRowCount(0);
            Object obj[] = new Object[11];

            try {
                while(rs.next()){
                    obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                    obj[1] = rs.getInt("IDSanPham");
                    obj[2] = rs.getString("MaSP");
                    obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                    obj[4] = rs.getString("TenSP");
                    obj[5] =rs.getString("SoLuong");
                    obj[6] =rs.getString("DonViTinh");
                    obj[7] =rs.getString("NoiNhap");
                    obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                    obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                    obj[10] = rs.getString("MoTa");
                    tblModel.addRow(obj);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
            }
        } else if(loaiSp == "Sắp Xếp Tên Giảm Dần"){
            String CauLenhTim = "Select * from KhoHang1  order by TenSP  DESC ";
            ResultSet rs = SQLHelper.executeQuery(CauLenhTim);

            DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
            //        xáo dữ liệu đang có trong bảng table
            tblModel.setRowCount(0);
            Object obj[] = new Object[11];

            try {
                while(rs.next()){
                    obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                    obj[1] = rs.getInt("IDSanPham");
                    obj[2] = rs.getString("MaSP");
                    obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                    obj[4] = rs.getString("TenSP");
                    obj[5] =rs.getString("SoLuong");
                    obj[6] =rs.getString("DonViTinh");
                    obj[7] =rs.getString("NoiNhap");
                    obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                    obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                    obj[10] = rs.getString("MoTa");
                    tblModel.addRow(obj);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
            }
        }

    }//GEN-LAST:event_btnSappxeppActionPerformed

    private void cbbSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSapXepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbSapXepActionPerformed

    private void txtTimGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimGiaKeyReleased
        double timGiaBan;
        try{
            timGiaBan = Double.parseDouble(txtTimGia2.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), "Gía cần tìm không hợp lệ");
            return;
        }

        String CauLenhTim = "select *from khoHang1 where GiaBan >= ?";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim, timGiaBan);

        DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
        //        xáo dữ liệu đang có trong bảng table
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];

        try {
            while(rs.next()){
                obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                obj[1] = rs.getInt("IDSanPham");
                obj[2] = rs.getString("MaSP");
                obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                obj[4] = rs.getString("TenSP");
                obj[5] =rs.getString("SoLuong");
                obj[6] =rs.getString("DonViTinh");
                obj[7] =rs.getString("NoiNhap");
                obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                obj[10] = rs.getString("MoTa");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }
    }//GEN-LAST:event_txtTimGiaKeyReleased

    private void txtTimTenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimTenKeyReleased
        String timTen = "%" +txtTimTen2.getText() +"%";

        String CauLenhTim = "select *from khoHang1 where TenSP like ?";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim, timTen);

        DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
        //        xáo dữ liệu đang có trong bảng table
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];

        try {
            while(rs.next()){
                obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                obj[1] = rs.getInt("IDSanPham");
                obj[2] = rs.getString("MaSP");
                obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                obj[4] = rs.getString("TenSP");
                obj[5] =rs.getString("SoLuong");
                obj[6] =rs.getString("DonViTinh");
                obj[7] =rs.getString("NoiNhap");
                obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                obj[10] = rs.getString("MoTa");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }
    }//GEN-LAST:event_txtTimTenKeyReleased

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        double timGiaBan;
        try{
            timGiaBan = Double.parseDouble(txtTimGia2.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), "Gía cần tìm không hợp lệ");
            return;

        }
        String timTen = "%" +txtTimTen2.getText() +"%";

        String CauLenhTim = "select *from khoHang1 where GiaBan >= ? and TenSP like ?";
        ResultSet rs = SQLHelper.executeQuery(CauLenhTim, timGiaBan, timTen);

        DefaultTableModel tblModel = (DefaultTableModel)tblDuLieuSanPham.getModel();
        //        xáo dữ liệu đang có trong bảng table
        tblModel.setRowCount(0);
        Object obj[] = new Object[11];

        try {
            while(rs.next()){
                obj[0] = tblDuLieuSanPham.getRowCount() + 1;
                obj[1] = rs.getInt("IDSanPham");
                obj[2] = rs.getString("MaSP");
                obj[3] = LayTenLoaiSP(rs.getInt("MaLoaiSP"));
                obj[4] = rs.getString("TenSP");
                obj[5] =rs.getString("SoLuong");
                obj[6] =rs.getString("DonViTinh");
                obj[7] =rs.getString("NoiNhap");
                obj[8] = Chuyendoi.SoString(rs.getDouble("GiaNhap"));
                obj[9] = Chuyendoi.SoString( rs.getDouble("GiaBan"));
                obj[10] = rs.getString("MoTa");
                tblModel.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Lỗi truy xuất dữ liệu");
        }
    }//GEN-LAST:event_btnTimActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane bang;
    private javax.swing.JButton btnSappxepp2;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTim2;
    private javax.swing.JButton btnXoa;
    private javax.swing.JPanel butitem;
    private javax.swing.JComboBox cbbLoaiSanPham;
    private javax.swing.JComboBox cbbSapXep2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnThongTin;
    private javax.swing.JPanel jpnbuttom;
    private javax.swing.JLabel lblDonViTinh;
    private javax.swing.JLabel lblGiaBan;
    private javax.swing.JLabel lblGiaNhap;
    private javax.swing.JLabel lblLoaiSanPham;
    private javax.swing.JLabel lblMaSanPham;
    private javax.swing.JLabel lblMoTa;
    private javax.swing.JLabel lblNoiNhap;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTenSanPham;
    private javax.swing.JPanel pnltk2;
    private javax.swing.JSpinner spnSoLuong;
    private javax.swing.JPanel tavb;
    private javax.swing.JTable tblDuLieuSanPham;
    private javax.swing.JTextField txtDonviTinh;
    private javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtNoiNhap;
    private javax.swing.JLabel txtQLKH;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTimGia2;
    private javax.swing.JTextField txtTimTen2;
    // End of variables declaration//GEN-END:variables

    private void white(boolean next) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
